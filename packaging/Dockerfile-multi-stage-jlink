# Because JLink provides binaries for the final container, Linux flavors and Java versions in both stages must match

## Stage 1 : Gradle build produces the application executable jar and custom JRE
FROM openjdk:17-jdk-alpine3.14 AS jlinker

# Copy local source
WORKDIR /stella
COPY . /stella
RUN mv src/main/java/module-info.java.disabled src/main/java/module-info.java

# Build jar and use JLink to create new distilled JRE
RUN apk --no-cache add binutils
RUN ./gradlew build jlink --build-file build-jlink.gradle


## Stage 2 : Final image populated with custom JRE and application executable jar
FROM alpine:3.16.0

COPY --from=jlinker /stella/build/image /app

ENTRYPOINT ["/app/bin/stella"]
