plugins {
	id 'org.springframework.boot' version '2.6.7-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'

    // Add the jlink task, and a helpful reference: https://sergiomartinrubio.com/articles/build-a-docker-jre-image-with-java-17-and-spring/
	id 'org.beryx.jlink' version '2.25.0'
}

group = 'com.dijure.stella'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	maven { url 'https://repo.spring.io/release' }
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'com.google.code.findbugs:jsr305:3.0.2'  // To remove warning "unknown enum constant When.MAYBE"
	implementation 'org.springframework.boot:spring-boot-starter'

	// Added for JLink
	implementation 'javax.servlet:javax.servlet-api:4.0.1'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// For JLink plugin added above
jar {
	enabled = true
}

application {
	mainModule = 'com.dijure.stella'
	mainClass  = 'com.dijure.stella.StellaApplication'
}

jlink {
	forceMerge 'log4j-api'   // https://github.com/beryx/badass-jlink-plugin/issues/14

	mergedModule {
		additive = true
		uses 'ch.qos.logback.classic.spi.Configurator'

		// https://github.com/netty/netty/issues/11753
		// https://github.com/iTitus/skat-java/blob/986d29f6e69d99f7ea07f57e09daef40f3d491ce/build.gradle
		excludeProvides servicePattern: 'reactor.blockhound.integration.*'

		options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
		launcher {
			name = 'stella'
		}
	}

	jpackage {
		imageName = 'Stella'
		skipInstaller = true
		installerName = 'Stella'
		installerType = 'pkg'
	}
}

tasks.jlink.doLast {
	// Spring performs its magic by scanning the classpath, but in a modular application the classpath is replaced by the module-path.
	// To circumvent this problem, we copy all resources into the 'config' directory and set this directory as classpath.
	copy {
		from "src/main/resources"
		into "$imageDir.asFile/bin/config"
	}
}

//	jpackage {
//		imageName = 'Stella'
//		skipInstaller = true
////		installerName = 'Stella'
////		installerType = 'pkg'
//	}
